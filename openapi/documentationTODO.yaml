openapi: "3.0.3"
info:
  title: "TODO API"
  description: "TODO API"
  version: "1.0.0"
servers:
- url: "https://TODO"
paths:
  /task:
    get:
      description: "Read Array task"
      parameters:
        - in: query
          name: status
          required: false
          schema:
            type: string
        - in: query
          name: pagination
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskArray"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      description: "Create task"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/TaskDTO"
        required: true
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskIdDTO"
  /task/{id}:
    delete:
      description: "Delete task"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    get:
      description: "Read task"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskIdDTO"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    put:
      description: "Update task"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "integer"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/TaskDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskIdDTO"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /task/{id}/{status}:
    put:
      description: "put ststus"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
        - name: "ststus"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskIdDTO"
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /status:
    get:
      description: "Read all Status"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                
  /status/{name}:
    get:
      description: "Read id Status"
      parameters:
        - name: "name"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: integer
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
    post:
      description: "create status"
      parameters:
        - name: "name"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                type: string
        "409":
          description: "Conflict"
          content:
            '*/*':
              schema:
                type: object
    delete:
      description: "delete Status"
      parameters:
        - name: "name"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: object
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"
  /status/{name}/{newName}:
    put:
      description: "update Status"
      parameters:
        - name: "name"
          in: "path"
          required: true
          schema:
            type: string
        - name: "newName"
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: string
        "404":
          description: "Not Found"
          content:
            '*/*':
              schema:
                type: "object"


components:
  schemas:
    TaskDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    TaskIdDTO:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        status:
          type: string
    TaskArray:
      type: array
      items:
        $ref: "#/components/schemas/TaskIdDTO"
